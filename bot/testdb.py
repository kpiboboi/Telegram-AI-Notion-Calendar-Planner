import asyncio
import json
from bot.notion.notion_api import NotionAPI
from bot.config import DATABASE_ID

notion_tasks_api = NotionAPI()

async def test_load_tasks():
    """
    –¢–µ—Å—Ç: –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∑–∞–¥–∞—á–∏ –∏–∑ Notion –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç rollup.
    """
    print("\n--- üóÇÔ∏è –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–¥–∞—á –∏–∑ Notion ---\n")

    filter_obj = {
        "filter": {
            "or": [
                {"property": "Holat", "select": {"equals": "Boshlanmadi"}},
                {"property": "Holat", "select": {"equals": "Jarayonda"}}
            ]
        }
    }

    response = await notion_tasks_api.query_database(DATABASE_ID, filter_obj)

    for item in response["results"]:
        task_id = item["id"]
        props = item["properties"]

        name = props["Ishlar"].get("title", [{}])[0].get("text", {}).get("content", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
        status = props.get("Holat", {}).get("select", {}).get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")

        # üü¢ 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–≤—è–∑—å —Å Planner
        planner_relation = props.get("Planner", {}).get("relation", [])
        if not planner_relation:
            print(f"‚ö†Ô∏è {name}: –Ω–µ—Ç —Å–≤—è–∑–∏ —Å Planner, rollup –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            continue

        # üü¢ 2. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Planner
        planner_id = planner_relation[0]["id"]
        planner_data = await notion_tasks_api.client.pages.retrieve(planner_id)

        # üü¢ 3. –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∏ –¥–µ–¥–ª–∞–π–Ω
        planner_props = planner_data.get("properties", {})

        priority = planner_props.get("Prioritet", {}).get("select", {}).get("name", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        deadline = planner_props.get("Deadline", {}).get("date", {}).get("start", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")

        print(f"üìù {name} | –°—Ç–∞—Ç—É—Å: {status} | –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {priority} | –î–µ–¥–ª–∞–π–Ω: {deadline}")

asyncio.run(test_load_tasks())