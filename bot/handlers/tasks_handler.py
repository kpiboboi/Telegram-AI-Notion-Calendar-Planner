from aiogram.types import Message
from aiogram.filters import Command
from bot.notion.tasks import get_tasks, add_task

from bot.utils.logger import logger

async def tasks_command(message: Message):
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤—ã–∑–≤–∞–ª /tasks")
    tasks_list = get_tasks()  # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç [(name, status), ...]
    if tasks_list:
        response = "\n".join([f"üîπ {t[0]} ‚ûñ {t[1]}" for t in tasks_list])
        logger.debug("–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
    else:
        logger.debug("–ó–∞–¥–∞—á –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        response = "–ù–µ—Ç –∑–∞–¥–∞—á –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è."
    await message.answer(f"üìã **–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á:**\n{response}")

async def addtask_command(message: Message):
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤—ã–∑–≤–∞–ª /addtask")
    task_name = message.text.replace("/addtask", "").strip()
    if not task_name:
        logger.debug("–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –ø—É—Å—Ç–æ.")
        await message.answer("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏.")
        return

    add_task(task_name)
    logger.debug("–ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–æ.")
    await message.answer(f"‚úÖ –ó–∞–¥–∞—á–∞ '{task_name}' –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É Notion.")