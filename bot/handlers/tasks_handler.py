from aiogram.types import Message
from bot.notion.tasks import get_tasks, add_task
from bot.utils.logger import logger
from aiogram.enums import ParseMode


async def tasks_command(message: Message):
    #–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –∏–∑ Notion
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤—ã–∑–≤–∞–ª /tasks")
    try:
        tasks_list = await get_tasks()
        if tasks_list:
            response = "\n".join([f"üîπ {t[0]} ‚ûñ {t[1]}" for t in tasks_list])
            logger.debug(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º {len(tasks_list)} –∑–∞–¥–∞—á.")
        else:
            logger.debug("–ó–∞–¥–∞—á –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
            response = "–ù–µ—Ç –∑–∞–¥–∞—á –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è."
    except Exception as e:
        logger.exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á –∏–∑ Notion!")
        response = "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á."

    tasklist = (f"üìã <b>–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á:</b>\n{response}")
    await message.answer(tasklist, parse_mode=ParseMode.HTML)

async def addtask_command(message: Message):
    #–î–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–¥–∞—á—É –≤ Notion
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤—ã–∑–≤–∞–ª /addtask")
    task_name = message.text.replace("/addtask", "").strip()

    if not task_name:
        logger.debug("–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –ø—É—Å—Ç–æ.")
        await message.answer("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏.")
        return

    try:
        await add_task(task_name)
        logger.debug(f"–ó–∞–¥–∞—á–∞ '{task_name}' –¥–æ–±–∞–≤–ª–µ–Ω–∞.")
        await message.answer(f"‚úÖ –ó–∞–¥–∞—á–∞ '{task_name}' –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É Notion.")
    except Exception as e:
        logger.exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏ –≤ Notion!")
        await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")