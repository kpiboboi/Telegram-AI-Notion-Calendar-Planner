from aiogram import Bot, Dispatcher
from aiogram.types import Message
from aiogram.filters import Command
from notion_client import Client
from dotenv import load_dotenv
import os

load_dotenv(dotenv_path="bot/.env")

API_TOKEN = os.getenv("TELEGRAM_API_TOKEN")
NOTION_TOKEN = os.getenv("NOTION_TOKEN")
DATABASE_ID = os.getenv("NOTION_DATABASE_ID")

bot = Bot(token=API_TOKEN)
dp = Dispatcher()
notion = Client(auth=NOTION_TOKEN)

# –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞—á–∏ –∏–∑ Notion
async def get_tasks():
    results = notion.databases.query(
        **{
            "database_id": DATABASE_ID,
            "sorts": [
                {"property": "Prioritet", "direction": "ascending"}
            ]
        }
    )
    tasks = [f"üîπ {task['properties']['Ishlar']['title'][0]['text']['content']} ‚Äî {task['properties']['Holat']['select']['name']}" for task in results['results']]
    return tasks

# –ö–æ–º–∞–Ω–¥–∞ /tasks ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –∫—Ä–∞—Ç–∫–∏–π —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
@dp.message(Command("tasks"))
async def send_tasks(message: Message):
    tasks = await get_tasks()
    response = "\n".join(tasks) if tasks else "–ù–µ—Ç –∑–∞–¥–∞—á –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è."
    await message.answer(f"üìã **–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á:**\n{response}")

# –ö–æ–º–∞–Ω–¥–∞ /help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
@dp.message(Command("help"))
async def send_help(message: Message):
    help_text = (
        "/tasks - –ü–æ–∫–∞–∑–∞—Ç—å –∫—Ä–∞—Ç–∫–∏–π —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á\n"
        "/fulltable - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –∑–∞–¥–∞—á\n"
        "/addtask [–Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏] - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"
    )
    await message.answer(help_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /addtask –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
@dp.message(Command("addtask"))
async def add_task(message: Message):
    task_name = message.text.replace("/addtask", "").strip()
    if not task_name:
        await message.answer("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏.")
        return

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ Notion
    notion.pages.create(
        parent={"database_id": DATABASE_ID},
        properties={
            "Ishlar": {"title": [{"text": {"content": task_name}}]},
            "Holat": {"select": {"name": "Boshlanmadi"}},  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ç–∞—Ç—É—Å "–ù–µ –Ω–∞—á–∞—Ç–∞"
        }
    )
    await message.answer(f"‚úÖ –ó–∞–¥–∞—á–∞ '{task_name}' –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É Notion.")

async def main():
    print("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)

if __name__ == '__main__':
    import asyncio
    asyncio.run(main())